[tool.pytest.ini_options]
# Additional pytest configuration
pythonpath = ["."]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.black]
line-length = 120
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | reports
  | logs
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
# Enable specific rule sets
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
]

# Ignore specific rules that conflict with test framework patterns
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults (pytest fixtures)
]

# Exclude files/directories
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".venv",
    "venv",
    "build",
    "dist",
    "reports",
    "logs",
]

[tool.ruff.lint.per-file-ignores]
# Allow certain patterns in test files
"tests/**/*.py" = [
    "F811",  # redefinition of unused name (pytest fixtures)
    "ARG001",  # unused function argument (pytest hooks)
]
"conftest.py" = [
    "F811",  # redefinition (pytest fixtures)
    "ARG001",  # unused arguments (pytest hooks)
]
