name: Quick Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  quick-test:
    name: Quick Test Run
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Playwright browsers
      run: |
        playwright install chromium --with-deps
        
    - name: Create .env file
      run: |
        cat > .env << EOF
        BASE_URL=https://ultimateqa.com/automation
        BROWSER=chromium
        HEADLESS=true
        DEFAULT_TIMEOUT=60000
        NAVIGATION_TIMEOUT=90000
        ASSERTION_TIMEOUT=30000
        SCREENSHOT_ON_FAILURE=true
        VIDEO_ON_FAILURE=false
        TRACE_ON_FAILURE=true
        LOG_LEVEL=INFO
        LOG_TO_FILE=false
        EOF
        
    - name: Run all tests
      run: |
        python -m pytest tests/ \
          --browser=chromium \
          -v \
          --tb=short \
          --alluredir=reports/allure-results \
          --html=reports/html/report.html \
          --self-contained-html
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          reports/
          screenshots/
          traces/
        retention-days: 7
        
    - name: Upload Allure results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-results
        path: reports/allure-results/
        retention-days: 30
        
    - name: Test Summary
      if: always()
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ -f "reports/html/report.html" ]; then
          echo "✅ HTML Report generated" >> $GITHUB_STEP_SUMMARY
        fi
        if [ -d "reports/allure-results" ]; then
          echo "✅ Allure results collected" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Check artifacts for detailed reports" >> $GITHUB_STEP_SUMMARY

  generate-report:
    name: Generate Allure Report
    runs-on: ubuntu-latest
    needs: quick-test
    if: always()
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Allure results
      uses: actions/download-artifact@v4
      with:
        name: allure-results
        path: allure-results
        
    - name: Setup Java for Allure
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Install Allure
      run: |
        wget https://github.com/allure-framework/allure2/releases/download/2.25.0/allure-2.25.0.tgz
        tar -xvzf allure-2.25.0.tgz
        sudo mv allure-2.25.0 /opt/allure
        sudo ln -s /opt/allure/bin/allure /usr/bin/allure
        
    - name: Generate Allure Report
      run: |
        allure generate allure-results -o allure-report --clean
        
    - name: Upload Allure Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-report
        path: allure-report/
        retention-days: 30
        
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: allure-report
        destination_dir: latest
