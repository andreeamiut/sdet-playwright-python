name: Playwright Python Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']
        browser: [chromium, firefox, webkit]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Playwright browsers
      run: playwright install --with-deps ${{ matrix.browser }}
      
    - name: Create .env file
      run: |
        echo "BASE_URL=https://ultimateqa.com/automation" > .env
        echo "BROWSER=${{ matrix.browser }}" >> .env
        echo "HEADLESS=true" >> .env
        echo "SCREENSHOT_ON_FAILURE=true" >> .env
        echo "VIDEO_ON_FAILURE=true" >> .env
        echo "TRACE_ON_FAILURE=true" >> .env
        
    - name: Run smoke tests
      run: pytest -m smoke --browser=${{ matrix.browser }} -v
      continue-on-error: false
      
    - name: Run regression tests
      run: pytest -m regression --browser=${{ matrix.browser }} -v
      continue-on-error: true
      if: success() || failure()
      
    - name: Upload screenshots
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: screenshots-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.browser }}
        path: screenshots/
        retention-days: 30
        
    - name: Upload videos
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: videos-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.browser }}
        path: videos/
        retention-days: 30
        
    - name: Upload traces
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: traces-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.browser }}
        path: traces/
        retention-days: 30
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-results-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.browser }}
        path: reports/allure-results/
        retention-days: 30
        
    - name: Upload HTML report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: html-report-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.browser }}
        path: reports/html/
        retention-days: 30

  allure-report:
    name: Generate Allure Report
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Get Allure history
      uses: actions/checkout@v4
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages
        
    - name: Generate Allure Report
      uses: simple-elf/allure-report-action@master
      if: always()
      with:
        allure_results: artifacts/allure-results-*
        allure_history: allure-history
        keep_reports: 20
        
    - name: Deploy report to GitHub Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: allure-history
